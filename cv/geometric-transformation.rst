========
几何变换
========

要完成一张图像的几何变换，需要两个独立的算法。首先需要一个算法实现空间坐标变化，用它描述每个像素如何从初始位置移动到终止位置。
其次还需要一个插值算法完成输出图像的每个像素灰度值。

一、仿射变换(二维空间)
---------------------

仿射变换矩阵的最后一行为0,0,1

仿射变换之平移
--------------

1. 方程法
2. 矩阵法(矩阵乘法)


仿射变换之放大和缩小
--------------------

1. 方程法
2. 矩阵法(矩阵乘法)

.. math::

  α_t(i) = P(O_1, O_2, … O_t, q_t = S_i λ)

仿射变换之旋转
--------------

1. 方程法
2. 矩阵法(矩阵乘法)


仿射变换之插值算法
------------------

1. 最近邻插值
2. 双线性插值

二、投影变换(三维空间)
---------------------

如果物体在三维空间发生了旋转，通常称为投影变换。


三、极坐标变换(圆形物体)
-----------------------

通常利用极坐标变换来校正图像中的圆形物体或被包含在圆环中的物体。

1. 将笛卡尔坐标转换为极坐标：`cartToPolar()`
2. 将极坐标转换为笛卡尔坐标：`polarToCart()`
3. 利用极坐标变换对图像进行变换：`repeat()`

线性极坐标函数：`linearPolar()`
对数极坐标函数：`logPolar()`

