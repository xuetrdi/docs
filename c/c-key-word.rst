===========
C语言关键字
===========

为什么要有关键字？
-----------------

关键字是程序设计中代码必须包含的部分，在编译器编译C代码的时候必然要对C代码进行断句，将代码分割成不同
部分，将这些部分分别解析和编译。

C语言关键字蕴含了C语言的全部词汇，囊括了C语言中大量的知识要点。

extern
------

+ 同一文件引用后面定义的`变量`
+ 不同文件引用别的文件中的`全局变量`
+ 不同文件医用别的文件中的`函数的整个声明`，然后可以`调用`这个函数。
+ 不同文件引用别的文件中的`结构体`。
+ 是全局变量或者函数就可以使用`extern`在本文件中`引用`别的文件中的`全局变量`或者`函数`。


auto
----

声明自动变量,编译器在默认的缺省情况下，所有变量都是auto的。

volatile
--------

说明变量在程序执行中可被隐含地改变

register
--------

声明寄存器变量，register变量必须是被CPU寄存器所接受的类型。

- register变量必须是被CPU寄存器所接受的类型
- register变量必须是一个单个的值
- 长度应小于等于整型的长度
- register不放在内存中，所以不能用取地址符&来获取register变量的地址

static
------

有两个作用：修饰变量和修饰函数。

总之在C语言中被static修饰，限制了有效的作用域，改变了存储位置和声明周期。

两种含义: 第一，为了表示退出一个块后仍然存在的局部变量。第二，用来表示不能被其它文件访问的全局变量和函数。

+ 修饰变量
  
  - 修饰全局变量: 作用域仅限于被定义文件中。其它文件即使使用extern声明也没办法使用它。准确的说是从定义之处开始，到文件结尾。
  - 修饰局部变量: 在函数体里面定义，就只能在这个函数里用了。即使同一文件的其它函数也用不了。
  - 共性: `static`修饰的全局变量和局部变量都保存才静态区。函数运行结束变量不会被销毁。下次调用函数仍然用到这个值。

+ 修饰函数

  - 修饰函数，是函数成为静态函数。是对函数的作用域仅限于本文件(内部函数)。